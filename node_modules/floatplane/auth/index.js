"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Auth = void 0;
const Core_1 = require("../Core");
class Auth extends Core_1.Core {
    endpoints = {
        login: "https://www.floatplane.com/api/auth/login",
        factor: "https://www.floatplane.com/api/auth/checkFor2faLogin",
    };
    /**
     * Login to floatplane using provided credentials.
     * @param {string} username Username/Email
     * @param {string} password Password
     * @param {string} captchaToken Recaptcha token (single use). Not required.
     * @returns {LoginResponse} User object OR `{ needs2FA: true }` if user requires 2 Factor authentication.
     *
     * @example
     * // captchaToken is not required for login.
     * // Get a single use captchaToken by going to floatplane.com/login and running
     * grecaptcha.execute('6LfwnJ0aAAAAANTkEF2M1LfdKx2OpWAxPtiHISqr', { action:'login' }).then(console.log)
     * // in console.
     */
    login = async (username, password, captchaToken) => JSON.parse(await this.got.post(this.endpoints.login, {
        method: "POST",
        json: { username, password, captchaToken },
        resolveBodyOnly: true,
    }));
    /**
     * Login using provided 2Factor token.
     * @param {string} token 2 Factor Authentication token (single use)
     * @returns {Promise<User>} User object
     */
    factor = async (token) => JSON.parse(await this.got.post(this.endpoints.factor, {
        method: "POST",
        json: { token: token.toString() },
        resolveBodyOnly: true,
    }));
}
exports.Auth = Auth;
//# sourceMappingURL=index.js.map